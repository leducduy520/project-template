name: Builder
description: 'For building'
author: duyld15
inputs:
  preset:
    description: 'Cmake preset to be built'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Check environment variable
      run: |
        echo "${{ env.GITHUB_WORKSPACE }}"
        echo "${{ env.MONGODB_URI }}"
        echo "${{ env.MONGODB_NAME }}"
        echo "${{ env.MONGODB_COLL }}"
      shell: bash
    - name: Check driver
      run: ls -al /usr/src/external
      shell: bash
    - name: Save current directory
      run: echo "CURRENT_DIR=$(pwd)" >> $GITHUB_ENV
      shell: bash
    - name: Check current directory
      run: echo "$CURRENT_DIR"
      shell: bash

      #external/SFML/lib/cmake/SFML/SFMLStaticTargets-relwithdebinfo.cmake
    - name: Moving external build to project's root directory
      run: mv /usr/src/external ${{ env.CURRENT_DIR }}
      shell: bash
    - name: checking sfml targets
      run: cat ${{ env.CURRENT_DIR }}/external/SFML/lib/cmake/SFML/SFMLStaticTargets-relwithdebinfo.cmake
      shell: bash
    - name: Configure Project
      run: make configure PRESET=${{ inputs.preset }}
      shell: bash
    - name: Build Project
      run: cmake --build --preset=${{ inputs.preset }}
      shell: bash
    - name: Install Project
      run: cmake --build --preset=${{ inputs.preset }} -t install
      shell: bash
    - name: Test Project
      env:
        MONGODB_URI: ${{ env.MONGODB_TEST_URI }}
        MONGODB_NAME: test
        MONGODB_COLL: game
      run: |
        echo "$MONGODB_URI"
        echo "$MONGODB_NAME"
        echo "$MONGODB_COLL"
        ./out/${{ inputs.preset }}/install/bin/Catch-test
      shell: bash