name: Test project on push to main
on:
  push:
    branches:
      - main
      - merge-*
    paths:
      - "**.c"
      - "**.cpp"
      - "**.hpp"
      - "**.h"
      - "**/CMakeLists.txt"
      - "**.cmake"
      - "./Makefile"
      - "**/CMakePresets.json"
      - "**.py"
      - ".github/workflows/**"
jobs:
  configure-and-build:
    runs-on: self-hosted
    outputs:
      config_files: ${{ steps.publish.outputs.config_files }}
    steps:
      - name: update & install deps
        run: |
          sudo apt-get install gcc g++ gdb
          sudo apt-get install make cmake
          sudo apt-get install git doxygen
          sudo apt-get install python3 python3-pip
          pip install cmake-format
          pip install ninja
          sudo apt-get install graphviz pkg-config
      - name: Checkout
        uses: actions/checkout@v4.1.2
      - name: Configure Project
        run: make config-ubuntu
      - name: Build Project
        run: cmake --workflow --preset=ubuntu
      - name: Publish
        id: publish
        run: find out/install/ubuntu/external/lib/cmake/Catch2/*.cmake -type f -execdir echo 'config_files={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: install-product
          path: out/install/ubuntu/**
  execute-app:
    runs-on: self-hosted
    needs: configure-and-build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: install-product
      - name: test output
        run: echo '${{ needs.configure-and-build.outputs.config_files }}'
      - name: Check directory
        run: ls
      - name: Run app
        run: |
          cd ./bin
          chmod a+x app
          export LD_LIBRARY_PATH=$PWD/../lib
          ./app

  execute-test:
    runs-on: self-hosted
    needs: configure-and-build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: install-product
      - name: test output
        run: echo '${{ needs.configure-and-build.outputs.config_files }}'
      - name: Check directory
        run: ls
      - name: Run test
        run: |
          cd ./bin
          chmod a+x Catch-test
          export LD_LIBRARY_PATH=$PWD/../lib
          ./Catch-test

      # - name: Ctest
      #   run: ctest --preset=ubuntu
      # - name: Deploy to GitHub Pages
      #   uses: Cecilapp/GitHub-Pages-deploy@v3
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #       email: duyleduc123@gmail.com
      #       build_dir: ./docs/html
