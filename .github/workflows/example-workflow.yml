name: Examples
on:
  workflow_dispatch:
    inputs:
      hello:
        description: "Input a name"
        required: true
        default: "duyld"
        type: string
      enable_print:
        description: "Enable show point"
        required: true
        type: boolean
      amount:
        description: "A dumb number"
        required: false
        type: number
      work_environment:
        description: "Additional informations for printing"
        required: false
        type: environment
env:
  ENABLE: true
jobs:
  concurrency-Job-1:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  concurrency-Job-2:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  Print-secrets-in-environment:
    runs-on: ubuntu-latest
    environment: testing
    steps:
      - name: Print secret
        run: echo "${{secrets.TEST_SECRET}}"
  Print-If-Main:
    if: ${{github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest
    steps:
      - name: Print
        if: ${{env.ENABLE}}
        run: echo "Enaable printing step!!!"
  Print-Form-Input:
    runs-on: ubuntu-latest
    steps:
      - name: Print inputs.hello
        run: echo ${{ inputs.hello }}
      - name: Print inputs.enable_print
        run: echo ${{ inputs.enable_print }}
      - name: Print inputs.amount
        run: echo ${{ inputs.amount }}
      - name: Print inputs.work_environment
        run: echo ${{ inputs.work_environment }}
  Matrix-Run:
    strategy:
      matrix:
        version: [10, 11, 12]
        os: [ubuntu, windows, mac]
    runs-on: ubuntu-latest
    steps:
      - name: Run matrix
        run: echo "this app version ${{matrix.version}} run on os ${{matrix.os}}"
  Generate-Output:
    runs-on: ubuntu-latest
    outputs:
      list-file: ${{ steps.out.outputs.list-file }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Make Output
        id: out
        run: echo "list-file=$(find -maxdepth 1 -type f -name '.gitig*')" >> $GITHUB_OUTPUT
  Print-Output:
    runs-on: ubuntu-latest
    needs: ["Generate-Output"]
    steps:
      - name: Print
        run: echo ${{ needs.Generate-Output.outputs.list-file }}
      - name: Print Github object
        run: echo "${{ toJson(github) }}"
  Upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: product
          path: cmake
  Download:
    runs-on: ubuntu-latest
    needs: Upload
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: product
          path: cmake
      - name: Check a result
        run: ls
