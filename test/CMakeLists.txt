project(Catch-test)

read_deps_json()

build_external_project(
    BRANCHES
    ${PKG_BRANCHES}
    LABELS
    ${PKG_LABELS}
    REPOS
    ${PKG_REPOS}
    SIZE
    ${PKG_LAST_INDEX}
)

add_executable(${PROJECT_NAME} test.cpp)
target_link_libraries(${PROJECT_NAME} PRIVATE base)

load_cache(${EXTERNAL_BINARY_DIR} READ_WITH_PREFIX EXTERNAL_ SOCKETIO_BINARY_DIR)
load_cache(${EXTERNAL_BINARY_DIR} READ_WITH_PREFIX EXTERNAL_ SOCKETIO_SOURCE_DIR)
load_cache(${EXTERNAL_BINARY_DIR} READ_WITH_PREFIX EXTERNAL_ SOCKETIO_INSTALL_PREFIX)

list(APPEND CMAKE_PREFIX_PATH ${EXTERNAL_SOCKETIO_INSTALL_PREFIX}/${CATCH2_CATCH_CMAKE_CONFIG_DESTINATION})
find_package(sioclient REQUIRED)

# add_library(SocketIO STATIC IMPORTED)
# set_target_properties(
# SocketIO PROPERTIES IMPORTED_LOCATION ${EXTERNAL_SOCKETIO_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/libsioclient.a
# INTERFACE_INCLUDE_DIRECTORIES ${EXTERNAL_SOCKETIO_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}
# )
target_link_libraries(${PROJECT_NAME} PRIVATE sioclient::sioclient)

load_cache(${EXTERNAL_BINARY_DIR} READ_WITH_PREFIX EXTERNAL_ CATCH2_BINARY_DIR)
load_cache(${EXTERNAL_BINARY_DIR} READ_WITH_PREFIX EXTERNAL_ CATCH2_SOURCE_DIR)
load_cache(${EXTERNAL_BINARY_DIR} READ_WITH_PREFIX EXTERNAL_ CATCH2_INSTALL_PREFIX)

load_cache(${EXTERNAL_CATCH2_BINARY_DIR} READ_WITH_PREFIX CATCH2_ PKGCONFIG_INSTALL_DIR)
load_cache(${EXTERNAL_CATCH2_BINARY_DIR} READ_WITH_PREFIX CATCH2_ CATCH_CMAKE_CONFIG_DESTINATION)

list(APPEND CMAKE_PREFIX_PATH ${EXTERNAL_CATCH2_INSTALL_PREFIX}/${CATCH2_CATCH_CMAKE_CONFIG_DESTINATION})
find_package(Catch2 REQUIRED)
target_link_libraries(${PROJECT_NAME} PRIVATE Catch2::Catch2WithMain)

list(APPEND CMAKE_MODULE_PATH ${EXTERNAL_CATCH2_SOURCE_DIR}/extras)
include(Catch)
catch_discover_tests(${PROJECT_NAME})

install(TARGETS ${PROJECT_NAME}
    RUNTIME PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE
    CONFIGURATIONS Debug Release
    DESTINATION ${CMAKE_INSTALL_BINDIR}
    COMPONENT Runtime
    PRIVATE_HEADER PERMISSIONS WORLD_READ OWNER_WRITE
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
    COMPONENT PrivateHeader
    PUBLIC_HEADER PERMISSIONS WORLD_READ OWNER_WRITE
    COMPONENT PublicHeader
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)
